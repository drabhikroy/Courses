show.legend = FALSE)+
scale_fill_brewer(palette = "Spectral") +
scale_edge_width_continuous(range = c(0.2,2))+
scale_size_continuous(range = c(2,6))+
scale_alpha(range = c(0.55, 0.75)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "none")
read_graph("GoT/gotS3.graphml",
format="graphml") %>%
as_tbl_graph() %>%
activate(nodes)  %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "stress") +
geom_edge_fan(aes(edge_alpha = ..index..),
edge_color = "#b2d8d8",
strength = 0.6,
n = 200,
show.legend = FALSE) +
geom_node_point(aes(size = size),
col = "#FFFFFF") +
geom_node_point(aes(fill = clu,
size = size,
alpha = centrality),
shape = 21,
color = "#FFFFFF",
show.legend = FALSE)+
scale_fill_brewer(palette = "Spectral") +
scale_edge_width_continuous(range = c(0.2,2))+
scale_size_continuous(range = c(2,6))+
scale_alpha(range = c(0.55, 0.75)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "none")
read_graph("GoT/gotS3.graphml",
format="graphml") %>%
as_tbl_graph() %>%
activate(nodes)  %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "stress") +
geom_edge_fan(aes(edge_alpha = ..index..),
edge_color = "#b2d8d8",
strength = 0.6,
n = 200,
show.legend = FALSE) +
geom_node_point(aes(size = size),
col = "#FFFFFF") +
geom_node_point(aes(fill = clu,
size = size,
alpha = centrality),
shape = 21,
color = "#FFFFFF",
show.legend = FALSE)+
scale_fill_brewer(palette = "Spectral") +
scale_edge_width_continuous(range = c(0.2,2))+
scale_size_continuous(range = c(2,6))+
scale_alpha(range = c(0.55, 0.75)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "none") %>%
ggsave(file='../scatter.png')
GoTs3 <-
read_graph("GoT/gotS3.graphml",
format="graphml") %>%
as_tbl_graph() %>%
activate(nodes)  %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "stress") +
geom_edge_fan(aes(edge_alpha = ..index..),
edge_color = "#b2d8d8",
strength = 0.6,
n = 200,
show.legend = FALSE) +
geom_node_point(aes(size = size),
col = "#FFFFFF") +
geom_node_point(aes(fill = clu,
size = size,
alpha = centrality),
shape = 21,
color = "#FFFFFF",
show.legend = FALSE)+
scale_fill_brewer(palette = "Spectral") +
scale_edge_width_continuous(range = c(0.2,2))+
scale_size_continuous(range = c(2,6))+
scale_alpha(range = c(0.55, 0.75)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "none")
GoTs3 <-
read_graph("GoT/gotS3.graphml",
format="graphml") %>%
as_tbl_graph() %>%
activate(nodes)  %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "stress") +
geom_edge_fan(aes(edge_alpha = ..index..),
edge_color = "#b2d8d8",
strength = 0.6,
n = 200,
show.legend = FALSE) +
geom_node_point(aes(size = size),
col = "#FFFFFF") +
geom_node_point(aes(fill = clu,
size = size,
alpha = centrality),
shape = 21,
color = "#FFFFFF",
show.legend = FALSE)+
scale_fill_brewer(palette = "Spectral") +
scale_edge_width_continuous(range = c(0.2,2))+
scale_size_continuous(range = c(2,6))+
scale_alpha(range = c(0.55, 0.75)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "none"); GoTs3
ggsave(GoTs3,
file='../scatter.png')
blogdown::build_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
ggsave(GoTs3,
file='../scatter.png',
width = 100,
height = 100,)
ggsave(GoTs3,
file='../scatter.png',
width = 100,
height = 100,
units = "mm")
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
install.packages(c("english", "rgl", "RSQLite"))
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(downloadthis)
library(here)
library(knitr)
library(kableExtra)
downloadthis::download_file(
path = here::here("static", "walkthroughs", "Plot a Graph", "1 Plot a Graph.R"),
output_name = "Plot a Graph Walkthrough",
button_label = "Download the Script",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
downloadthis::download_file(
path = here::here("static", "walkthroughs", "Plot a Graph", "1 Plot a Graph.R"),
output_name = "Plot a Graph Walkthrough",
button_label = "Download the Script",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::build_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
xaringan:::inf_mr()
here()
here()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
xaringan:::inf_mr()
library(tidyverse)
library(knitr)
library(kableExtra)
library(fontawesome)
library(here)
library(clt)
library(carData)
library(DT)
library(scales)
library(showtext)
font_add_google("Roboto Condensed", "roboto")
showtext_auto()
knitr::include_graphics("img/mean balancing point.png")
library(tidyverse)
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
xaringan:::inf_mr()
xaringan:::inf_mr()
list.files()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g/static/slides/IntroToPE/Intro to PE")
xaringan:::inf_mr()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
install.packages("psycModel")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown::stop_site()
blogdown::build_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::stop_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_site()
?blogdown::build_site()
blogdown::stop_site(build_rmd = TRUE)
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::stop_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::check_site()
blogdown::check_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::stop_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::check_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
library(chorddiag)
# 1. install the package devtools by running install.packages("devtools")
# 2. install chorddiag by running devtools::install_github("mattflor/chorddiag")
library(chorddiag) # Install the package chorddiag
students <- tibble(Math = c(50, 25, 5, 12),
Art = c(10, 55, 5, 20),
Science = c(45,12,29, 20),
PE = c(24,67,27,15))
students <- tibble(Math = c(50, 25, 5, 12),
Art = c(10, 55, 5, 20),
Science = c(45,12,29, 20),
PE = c(24,67,27,15)); students
students <- tibble(Math = c(50, 25, 5, 12),
Art = c(10, 55, 5, 20),
Science = c(45,12,29, 20),
PE = c(24,67,27,15)) %>%
as.matrix()
students
# Create a totally fake data set ----
scores <- tibble(Math = c(40, 20, 10, 15),
Art = c(10, 52, 7, 21),
Science = c(45, 12, 34, 21),
PE = c(26, 66, 21, 10)) %>%
as.matrix(); students
row.names(students) = c("Clas
# Define row names ----
row.names(students) = c("Class A",
"Class B",
"Class C",
"Class D")
# Create a totally fake data set ----
scores <- tibble(Math = c(40, 20, 10, 15),
Art = c(10, 52, 7, 21),
Science = c(45, 12, 34, 21),
PE = c(26, 66, 21, 10)) %>%
as.matrix(); students
# Define row names ----
row.names(scores) = c("Class A",
"Class B",
"Class C",
"Class D")
chorddiag(students,
type = "bipartite",
showTicks = F,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90)
chorddiag(scores,
type = "bipartite",
showTicks = F,
groupnameFontsize = 14,
groupnamePadding = 10,
margin = 90)
install.packages(c("digest", "lifecycle", "mapsf", "progressr", "rJava", "styler", "tidycensus"))
install.packages("rJava")
View(backbone_plot)
install.packages(c("RcppArmadillo", "shinydashboard", "tibble", "tidytext"))
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::check_site()
blogdown::hugo_build()
blogdown::hugo_version()
blogdown::hugo_available()
blogdown::install_hugo()
blogdown::check_site()
blogdown::check_site()
blogdown::check_site()
library(usethis)
edit_r_profile()
blogdown::check_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693g")
blogdown::build_site()
install.packages("blogdown")
blogdown::build_site()
install.packages("xaringan")
install.packages("xaringanthemer")
blogdown::build_site()
blogdown::serve_site()
blogdown::check_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
install.packages(c("bsplus", "diffobj", "manipulateWidget"))
blogdown::build_site()
blogdown::serve_site()
starwars
library(tidyverse)
starwars
starwars %>%
select(name, skin_color, birth_year) %>%
filter(hair_color == "blond")
starwars %>%
select(name, skin_color, birth_year)
starwars %>%
select(name, hair_color, birth_year) %>%
filter(hair_color == "blond")
blogdown::build_site()
blogdown::serve_site()
# Load libraries ----
library(tidytuesdayR)
library(tidyverse)
# Grab the tidytuesday data in a tt_load() format ----
# Take a look at ?tt_load for more information
nurses_tidyset <- tt_load("2021-10-05")
# Get the data set (though you can grab any document)----
nurses_data <- nurses_tidyset$nurses
# Go about wrangling as needed ----
nurses_data %>%
filter(Year == 2020)
names(nurses_tidyset)
install.packages("echarts4r.assets")
install.packages(c("deSolve", "flextable", "lubridate", "lwgeom", "sf"))
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site(build_rmd = TRUE)
install.packages("satellite")
install.packages("raster")
install.packages('terra', repos='https://rspatial.r-universe.dev')
install.packages("raster")
