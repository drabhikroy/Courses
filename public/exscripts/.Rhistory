paste0("Current as of ", today() %>% format('%b %d,%Y'))
paste0("Current as of ", today() %>% format('%b %d, %Y'), "7am.")
paste0("Current as of ", today() %>% format('%b %d, %Y'), " 7am.")
paste0("Current as of ", today() %>% format('%b %d, %Y'), " 7 a.m.")
paste0("Current as of 7a.m. on", today() %>% format('%b %d, %Y'))
paste0("Current as of 7a.m. on ", today() %>% format('%b %d, %Y'), ".")
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
install.packages("xts")
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp()
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp()
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp()
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp()
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
exit
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
exit
runApp('Documents/WVU/Research/WVCTSI/R Things/Pub Counts/Shiny NCBI Pull')
install.packages("metathis")
install.packages(c("pagedown", "xaringan"))
install.packages(c("pagedown", "xaringan"))
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.Rmd")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.Rmd")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.html")
remove.packages("knitr")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.27.tar.gz"
packageurl <- "https://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.27.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.Rmd")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.html")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 3/Slides Week 3.Rmd")
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
cum_tbl <- tibble(
class = c("5-9",
"10-14",
"15-19",
"20-24",
"25-29"),
mid = c("$\\dfrac{5+10}{2}=7.5$",
"$\\dfrac{10+15}{2}=12.5$",
"$\\dfrac{15+20}{2}=17.5$",
"$\\dfrac{20+25}{2}=22.5$",
"$\\dfrac{25+30}{2}=27.5$"),
freq = c("$10$",
"$2$",
"$4$",
"$3$",
"$1$"),
rel_freq = c("$\\dfrac{10}{20}=0.50$",
"$\\dfrac{2}{20}=0.10$",
"$\\dfrac{4}{20}=0.20$",
"$\\dfrac{3}{20}=0.15$",
"$\\dfrac{1}{20}=0.05$"),
cum_freq =c("$10$",
"$10 + 2 = 12$",
"$12 + 4 = 16$",
"$16 + 3 = 19$",
"$19 + 1 = 20$"),
cum_rel_freq = c("$\\dfrac{10}{20}=0.50$",
"$\\dfrac{12}{20}=0.60$",
"$\\dfrac{16}{20}=0.80$",
"$\\dfrac{19}{20}=0.95$",
"$\\dfrac{20}{20}=1.00$")
)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
library(dplyr)
library(knitr)
library(kableExtra)
library(tidyverse)
library(here)
library(patchwork)
read_csv("data/q1sol5.csv") %>%
kable(booktabs = TRUE,
linesep = "",
align = c('l', "c"),
col.names = c("Range",
"Frequency")
) %>%
kable_styling(latex_options = "striped",
position = "center",
full_width = FALSE)
cum_tbl <- tibble(
class = c("5-9",
"10-14",
"15-19",
"20-24",
"25-29"),
mid = c("$\\dfrac{5+10}{2}=7.5$",
"$\\dfrac{10+15}{2}=12.5$",
"$\\dfrac{15+20}{2}=17.5$",
"$\\dfrac{20+25}{2}=22.5$",
"$\\dfrac{25+30}{2}=27.5$"),
freq = c("$10$",
"$2$",
"$4$",
"$3$",
"$1$"),
rel_freq = c("$\\dfrac{10}{20}=0.50$",
"$\\dfrac{2}{20}=0.10$",
"$\\dfrac{4}{20}=0.20$",
"$\\dfrac{3}{20}=0.15$",
"$\\dfrac{1}{20}=0.05$"),
cum_freq =c("$10$",
"$10 + 2 = 12$",
"$12 + 4 = 16$",
"$16 + 3 = 19$",
"$19 + 1 = 20$"),
cum_rel_freq = c("$\\dfrac{10}{20}=0.50$",
"$\\dfrac{12}{20}=0.60$",
"$\\dfrac{16}{20}=0.80$",
"$\\dfrac{19}{20}=0.95$",
"$\\dfrac{20}{20}=1.00$")
)
kable(cum_tbl,
booktabs = TRUE,
escape = FALSE,
linesep = "\\addlinespace",
align = c('l', "c", "c", "c", "c", "c"),
col.names = c("Class",
"Midpoint",
"Frequency",
"Percentage Frequency",
"Cumulative Frequency",
"Cumulative Percentage Frequency")
) %>%
column_spec(6, width = "10em") %>%
kable_styling(latex_options = "striped",
position = "center",
full_width = FALSE)
read_csv("data/q1sol7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,100,10),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints) %>%
ggplot(aes(x=point,
y = n,
group=1)) +
geom_line(size = 0.60,
color = "#ff6347") +
geom_point(size = 3,
color='#4682B4') +
scale_x_continuous(breaks = scales::pretty_breaks(n = 6)) +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text = element_text(size = 12))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,100,10),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,100,10),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n())
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,1),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,1),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,1),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n())
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,1),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                                        breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n())
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n())
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                                        breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                                        breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints) %>%
ggplot(aes(x=point,
y = n,
group=1)) +
geom_line(size = 0.60,
color = "#ff6347") +
geom_point(size = 3,
color='#4682B4') +
scale_x_continuous(breaks = scales::pretty_breaks(n = 6)) +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text = element_text(size = 12))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n())
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup()
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5)
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints)
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints) %>%
mutate(point_sum = cumsum(point))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints) %>%
mutate(freq = n / sum(n))
read_csv("data/q1sol6and7.csv")  %>%
tibble() %>%
select(thing) %>%
group_by(ints = cut(thing,                                    breaks = seq(0,30,5),
include.lowest = TRUE,
right = FALSE,
ordered_result = TRUE)) %>%
summarise(n = n()) %>%
mutate(point = seq(10,30,5)) %>%
ungroup() %>%
add_row(ints = "[0,5)",
n = 0,
point = 5) %>%
arrange(point) %>%
select(-ints) %>%
mutate(freq = n / sum(n))  %>%
mutate(freq_sum = cumsum(freq))
notebook <- tibble(brain_c = c(15,-20,21,19,20))
range(notebook)
tibble(brain_c = c(15,-20,21,19,20))
min(notebook) - max(notebook)
min(notebook) to max(notebook)
paste0(min(notebook), " - ", max(notebook))
Modes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
notebook <- tibble(brain_c = c(15,-20,21,19,20))
minimum <- min(notebook)
maximum <- max(notebook)
m <- mean(notebook)
med <- median(notebook)
notebook
median(notebook, na.rm = TRUE)
median(notebook)
notebook <- tibble(brain_c = c(15,-20,21,19,20))
minimum <- min(notebook)
maximum <- max(notebook)
m <- mean(notebook)
med <- median(notebook)
notebook <-  c(15,-20,21,19,20)
minimum <- min(notebook)
maximum <- max(notebook)
m <- mean(notebook)
med <- median(notebook)
mo <- Modes(notebook)
install.packages("car")
source('~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp619/static/exscripts/likert_colorpalettes_functions.R', echo=TRUE)
library(tidyverse)
library(scales)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Unipolar likert scale color palette ----
# ~ You can add or remove choices and the program will output the appropriate color counts ----
unichoices <- c("Not Good",
"Somewhat Good",
"Moderately Good",
"Good",
"Very Good")
# ~ The base color in hex code (find ideas af https://www.color-hex.com/)
unicolor <- "#428bca"
# ~ Output the html ----
unihtmlcolors()
# ~ The base color in hex code (find ideas af https://www.color-hex.com/)
unicolor <- "#428bca"
# ~ Output the html ----
unihtmlcolors()
# ~ You can add or remove choices and the program will output the appropriate color counts ----
bichoices <- c("Strongly Disagree",
"Disagree",
"Neither Agree nor Disagree",
"Disagree",
"Strongly Disagree")
# ~ Two colors in hex code (find ideas af https://www.color-hex.com/)
bicolor_low <- "#d9534f"
bicolor_high <- "#428bca"
# ~ Output the html ----
bihtmlcolors()
source('~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp619/static/exscripts/likert_colorpalettes_functions.R', echo=TRUE)
# Load libraries ----
library(tidyverse)
install.packages(scales)
install.packages("scales")
install.packages("scales")
library(scales)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# ~ You can add or remove choices and the program will output the appropriate color counts ----
unichoices <- c("Not Good",
"Somewhat Good",
"Moderately Good",
"Good",
"Very Good")
unichoices
# ~ The base color in hex code (find ideas af https://www.color-hex.com/)
unicolor <- "#189ad3"
# ~ Output the html ----
unihtmlcolors()
# ~ You can add or remove choices and the program will output the appropriate color counts ----
bichoices <- c("Strongly Disagree",
"Disagree",
"Neither Agree nor Disagree",
"Agree",
"Strongly Agree")
# ~ Two colors in hex code (find ideas af https://www.color-hex.com/)
bicolor_low <- "#d9534f"
bicolor_high <- "#428bca"
# ~ Output the html ----
bihtmlcolors()
